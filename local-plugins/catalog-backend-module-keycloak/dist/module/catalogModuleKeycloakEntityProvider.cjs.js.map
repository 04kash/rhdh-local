{"version":3,"file":"catalogModuleKeycloakEntityProvider.cjs.js","sources":["../../src/module/catalogModuleKeycloakEntityProvider.ts"],"sourcesContent":["/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  coreServices,\n  createBackendModule,\n} from '@backstage/backend-plugin-api';\nimport { InputError } from '@backstage/errors';\nimport { catalogProcessingExtensionPoint } from '@backstage/plugin-catalog-node/alpha';\n\nimport { keycloakTransformerExtensionPoint } from '../extensions';\nimport type { GroupTransformer, UserTransformer } from '../lib/types';\nimport { KeycloakOrgEntityProvider } from '../providers';\nimport { eventsServiceRef } from '@backstage/plugin-events-node';\nimport { CatalogClient } from '@backstage/catalog-client';\n\n/**\n * Registers the `KeycloakEntityProvider` with the catalog processing extension point.\n *\n * @public\n */\nexport const catalogModuleKeycloakEntityProvider = createBackendModule({\n  pluginId: 'catalog',\n  moduleId: 'catalog-backend-module-keycloak',\n  register(env) {\n    let userTransformer: UserTransformer | undefined;\n    let groupTransformer: GroupTransformer | undefined;\n\n    env.registerExtensionPoint(keycloakTransformerExtensionPoint, {\n      setUserTransformer(transformer) {\n        if (userTransformer) {\n          throw new InputError('User transformer may only be set once');\n        }\n        userTransformer = transformer;\n      },\n      setGroupTransformer(transformer) {\n        if (groupTransformer) {\n          throw new InputError('Group transformer may only be set once');\n        }\n        groupTransformer = transformer;\n      },\n    });\n    env.registerInit({\n      deps: {\n        catalog: catalogProcessingExtensionPoint,\n        config: coreServices.rootConfig,\n        logger: coreServices.logger,\n        discovery: coreServices.discovery,\n        scheduler: coreServices.scheduler,\n        auth: coreServices.auth,\n        events: eventsServiceRef,\n      },\n      async init({ catalog, config, logger, discovery, scheduler, events, auth }) {\n        const catalogApi = new CatalogClient({ discoveryApi: discovery });\n        catalog.addEntityProvider(\n          KeycloakOrgEntityProvider.fromConfig(\n            { config, logger, discovery, catalogApi, events, auth },\n            {\n              scheduler: scheduler,\n              schedule: scheduler.createScheduledTaskRunner({\n                frequency: { hours: 24 }, // One pull per day to catch any event updates that were missed\n                timeout: { minutes: 3 },\n              }),\n              userTransformer: userTransformer,\n              groupTransformer: groupTransformer,\n            },\n          ),\n        );\n      },\n    });\n  },\n});\n"],"names":["createBackendModule","keycloakTransformerExtensionPoint","InputError","catalogProcessingExtensionPoint","coreServices","eventsServiceRef","CatalogClient","KeycloakOrgEntityProvider"],"mappings":";;;;;;;;;;AAkCO,MAAM,sCAAsCA,oCAAoB,CAAA;AAAA,EACrE,QAAU,EAAA,SAAA;AAAA,EACV,QAAU,EAAA,iCAAA;AAAA,EACV,SAAS,GAAK,EAAA;AACZ,IAAI,IAAA,eAAA;AACJ,IAAI,IAAA,gBAAA;AAEJ,IAAA,GAAA,CAAI,uBAAuBC,4CAAmC,EAAA;AAAA,MAC5D,mBAAmB,WAAa,EAAA;AAC9B,QAAA,IAAI,eAAiB,EAAA;AACnB,UAAM,MAAA,IAAIC,kBAAW,uCAAuC,CAAA;AAAA;AAE9D,QAAkB,eAAA,GAAA,WAAA;AAAA,OACpB;AAAA,MACA,oBAAoB,WAAa,EAAA;AAC/B,QAAA,IAAI,gBAAkB,EAAA;AACpB,UAAM,MAAA,IAAIA,kBAAW,wCAAwC,CAAA;AAAA;AAE/D,QAAmB,gBAAA,GAAA,WAAA;AAAA;AACrB,KACD,CAAA;AACD,IAAA,GAAA,CAAI,YAAa,CAAA;AAAA,MACf,IAAM,EAAA;AAAA,QACJ,OAAS,EAAAC,qCAAA;AAAA,QACT,QAAQC,6BAAa,CAAA,UAAA;AAAA,QACrB,QAAQA,6BAAa,CAAA,MAAA;AAAA,QACrB,WAAWA,6BAAa,CAAA,SAAA;AAAA,QACxB,WAAWA,6BAAa,CAAA,SAAA;AAAA,QACxB,MAAMA,6BAAa,CAAA,IAAA;AAAA,QACnB,MAAQ,EAAAC;AAAA,OACV;AAAA,MACA,MAAM,IAAK,CAAA,EAAE,OAAS,EAAA,MAAA,EAAQ,QAAQ,SAAW,EAAA,SAAA,EAAW,MAAQ,EAAA,IAAA,EAAQ,EAAA;AAC1E,QAAA,MAAM,aAAa,IAAIC,2BAAA,CAAc,EAAE,YAAA,EAAc,WAAW,CAAA;AAChE,QAAQ,OAAA,CAAA,iBAAA;AAAA,UACNC,mDAA0B,CAAA,UAAA;AAAA,YACxB,EAAE,MAAQ,EAAA,MAAA,EAAQ,SAAW,EAAA,UAAA,EAAY,QAAQ,IAAK,EAAA;AAAA,YACtD;AAAA,cACE,SAAA;AAAA,cACA,QAAA,EAAU,UAAU,yBAA0B,CAAA;AAAA,gBAC5C,SAAA,EAAW,EAAE,KAAA,EAAO,EAAG,EAAA;AAAA;AAAA,gBACvB,OAAA,EAAS,EAAE,OAAA,EAAS,CAAE;AAAA,eACvB,CAAA;AAAA,cACD,eAAA;AAAA,cACA;AAAA;AACF;AACF,SACF;AAAA;AACF,KACD,CAAA;AAAA;AAEL,CAAC;;;;"}